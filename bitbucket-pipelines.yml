image: node:20

definitions:
  caches:
    pnpm: $BITBUCKET_CLONE_DIR/.pnpm-store

  scripts:
    setup: &setup cp .env.example .env
      && corepack enable
      && corepack prepare pnpm@9.1.1 --activate
      && export PNPM_HOME="/root/.local/share/pnpm"
      && export PATH="$PNPM_HOME:$PATH"
      && pnpm add -g turbo
      && pnpm install

  steps:
    -step: &build-image
      name: Push to ECR
      size: 2x
      services:
        - docker
      script:
        - TAG=${BITBUCKET_BRANCH}-${BITBUCKET_BUILD_NUMBER}
        - TAG_LATEST=${BITBUCKET_BRANCH}-latest
        - docker build --build-arg NODE_ENV=$NODE_ENV --build-arg AWS_REGION=$AWS_REGION --build-arg AWS_KEY_ID=$AWS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY --build-arg COGNITO_USER_POOL_ID=$COGNITO_USER_POOL_ID --build-arg COGNITO_CLIENT_ID=$COGNITO_CLIENT_ID --build-arg SENTRY_DSN=$SENTRY_DSN --build-arg AUTH_URL=$AUTH_URL --build-arg RAFIKI_GRAPHQL_URL=$RAFIKI_GRAPHQL_URL --build-arg DOMAIN_WALLET_URL=$DOMAIN_WALLET_URL -t ${IMAGE}:$TAG -t ${IMAGE}:$TAG_LATEST .
        - pipe: atlassian/aws-ecr-push-image:2.4.2
          variables:
            AWS_ACCESS_KEY_ID: $AWS_KEY
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET
            AWS_DEFAULT_REGION: us-east-2
            IMAGE_NAME: ${IMAGE}
            TAGS: '${BITBUCKET_BRANCH}-${BITBUCKET_BUILD_NUMBER} ${BITBUCKET_BRANCH}-latest'


  services:
    docker:
      memory: 7168

options:
  docker: true
  size: 2x

pipelines:
  pull-requests:
    "**":
      - parallel:
          - step:
              name: Lint
              size: 4x
              script:
                - *setup
                - pnpm lint && pnpm lint:ws
              caches:
                - pnpm
          - step:
              name: Format
              size: 4x
              script:
                - *setup
                - pnpm format
              caches:
                - pnpm
          - step:
              name: Typecheck
              size: 4x
              script:
                - *setup
                - pnpm typecheck
              caches:
                - pnpm
  branches:
    "development":
      - stage:
          name: Build with Docker
          deployment: Dev
          steps:
            - step: *build-image
            - step:
                name: Deploy to DEV
                script:
                  - pipe: atlassian/aws-eks-kubectl-run:1.2.0
                    variables:
                      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID_TERRAFORM}
                      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_TERRAFORM}
                      AWS_DEFAULT_REGION: "us-east-2"
                      CLUSTER_NAME: ${CLUSTER_NAME}
                      KUBECTL_COMMAND: "set"
                      KUBECTL_ARGS:
                        - "image"
                        - "--namespace=dev"
                        - "deployment/frontend-admin"
                        - "frontend-admin=${IMAGE}:${BITBUCKET_BRANCH}-${BITBUCKET_BUILD_NUMBER}"
                      DEBUG: "true"
    "qa":
      - stage:
          name: Build with Docker
          deployment: QA
          steps:
            - step: *build-image
            - step:
                name: Deploy to QA
                script:
                  - pipe: atlassian/aws-eks-kubectl-run:1.2.0
                    variables:
                      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID_TERRAFORM}
                      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_TERRAFORM}
                      AWS_DEFAULT_REGION: "us-east-2"
                      CLUSTER_NAME: ${CLUSTER_NAME}
                      KUBECTL_COMMAND: "set"
                      KUBECTL_ARGS:
                        - "image"
                        - "--namespace=qa"
                        - "deployment/frontend-admin"
                        - "frontend-admin=${IMAGE}:${BITBUCKET_BRANCH}-${BITBUCKET_BUILD_NUMBER}"
                      DEBUG: "true"
