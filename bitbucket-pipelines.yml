image: node:20

definitions:
  caches:
    pnpm: $BITBUCKET_CLONE_DIR/.pnpm-store

  scripts:
    setup: &setup cp .env.example .env
      && corepack enable
      && corepack prepare pnpm@9.1.1 --activate
      && export PNPM_HOME="/root/.local/share/pnpm"
      && export PATH="$PNPM_HOME:$PATH"
      && pnpm add -g turbo
      && pnpm install

  services:
    docker:
      memory: 5120



pipelines:
  pull-requests:
    "**":
      - parallel:
          - step:
              name: Lint
              script:
                - *setup
                - pnpm lint && pnpm lint:ws
              caches:
                - pnpm
          - step:
              name: Format
              script:
                - *setup
                - pnpm format
              caches:
                - pnpm
          - step:
              name: Typecheck
              script:
                - *setup
                - pnpm typecheck
              caches:
                - pnpm
  branches:
    "development":
      - stage:
          name: Build with Docker
          deployment: Dev
          size: 2x
          steps:
            - step:
                name: Build with Docker
                image: python:3.7.4-alpine3.10

                script:
                  - pip3 install awscli
                  - TAG=${BITBUCKET_BRANCH}-${BITBUCKET_BUILD_NUMBER}
                  - TAG_LATEST=${BITBUCKET_BRANCH}-latest
                  - aws configure set aws_access_key_id "${AWS_KEY}"
                  - aws configure set aws_secret_access_key "${AWS_SECRET}"
                  - eval $(aws ecr get-login --no-include-email --region us-east-2 | sed 's;https://;;g')
                  - export DOCKER_BUILDKIT=1
                  - docker build -f apps/admin/Dockerfile . --build-arg NODE_ENV=$NODE_ENV --build-arg NEXT_PUBLIC_ADMIN_BASE_URL=$NEXT_PUBLIC_ADMIN_BASE_URL --build-arg NEXT_PUBLIC_AUTH_MICROSERVICE_URL=$NEXT_PUBLIC_AUTH_MICROSERVICE_URL --build-arg NEXT_PUBLIC_NOTIFICATION_MICROSERVICE_URL=$NEXT_PUBLIC_NOTIFICATION_MICROSERVICE_URL -t ${IMAGE}:$TAG
                  - docker build -f apps/admin/Dockerfile . --build-arg NODE_ENV=$NODE_ENV --build-arg NEXT_PUBLIC_ADMIN_BASE_URL=$NEXT_PUBLIC_ADMIN_BASE_URL --build-arg NEXT_PUBLIC_AUTH_MICROSERVICE_URL=$NEXT_PUBLIC_AUTH_MICROSERVICE_URL --build-arg NEXT_PUBLIC_NOTIFICATION_MICROSERVICE_URL=$NEXT_PUBLIC_NOTIFICATION_MICROSERVICE_URL -t ${IMAGE}:$TAG_LATEST
                  - docker push ${IMAGE}:$TAG
                  - docker push ${IMAGE}:$TAG_LATEST
                caches:
                  - pip
                services:
                  - docker
            - step:
                name: Deploy to DEV
                script:
                  - pipe: atlassian/aws-eks-kubectl-run:1.2.0
                    variables:
                      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID_TERRAFORM}
                      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY_TERRAFORM}
                      AWS_DEFAULT_REGION: "us-east-2"
                      CLUSTER_NAME: ${CLUSTER_NAME}
                      KUBECTL_COMMAND: "set"
                      KUBECTL_ARGS:
                        - "image"
                        - "--namespace=dev"
                        - "deployment/frontend-admin"
                        - "frontend-admin=${IMAGE}:${BITBUCKET_BRANCH}-${BITBUCKET_BUILD_NUMBER}"
                      DEBUG: "true"
